// Generated by Dagger (https://dagger.dev).
package com.temi.temiSDK;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class MainViewModel_Factory implements Factory<MainViewModel> {
  private final Provider<RobotController> robotControllerProvider;

  private final Provider<Context> contextProvider;

  public MainViewModel_Factory(Provider<RobotController> robotControllerProvider,
      Provider<Context> contextProvider) {
    this.robotControllerProvider = robotControllerProvider;
    this.contextProvider = contextProvider;
  }

  @Override
  public MainViewModel get() {
    return newInstance(robotControllerProvider.get(), contextProvider.get());
  }

  public static MainViewModel_Factory create(Provider<RobotController> robotControllerProvider,
      Provider<Context> contextProvider) {
    return new MainViewModel_Factory(robotControllerProvider, contextProvider);
  }

  public static MainViewModel newInstance(RobotController robotController, Context context) {
    return new MainViewModel(robotController, context);
  }
}
